version: '3.8'

services:
  # FastAPI Backend
  api:
    build: .
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - rentchain_network

  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: rentchain
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - rentchain_network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - rentchain_network

  # Celery Worker
  celery_worker:
    build: .
    command: celery -A app.core.celery:celery_app worker --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - ./uploads:/app/uploads
      - .:/app
    networks:
      - rentchain_network

  # Celery Beat (Scheduler)
  celery_beat:
    build: .
    command: celery -A app.core.celery:celery_app beat --loglevel=info
    env_file:
      - .env
    depends_on:
      - db
      - redis
    volumes:
      - .:/app
    networks:
      - rentchain_network

  # Flower (Celery monitoring)
  flower:
    build: .
    command: celery -A app.core.celery:celery_app flower --port=5555
    ports:
      - "5555:5555"
    env_file:
      - .env
    depends_on:
      - redis
    volumes:
      - .:/app
    networks:
      - rentchain_network

networks:
  rentchain_network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: